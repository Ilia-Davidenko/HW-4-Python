# Вычислить число c заданной точностью d. Число Пи не просто обрезать с math.pi, 
# а вычислить, используя формулы: Нилаканта, ряды Тейлора, серию Ньютона или серию Чудновских.

# Пример:
# - при d = 0.001, π = 3.141.    10^(-10)≤ d ≤10^-1

from decimal import Decimal, getcontext


def bailey_borwein_plouffe(d):     # Формула Бэйли — Боруэйна — Плаффа. Насколько я понял, на данный 
    pi = Decimal(0)                # момент это наиболее актуальная формула для вычисления
    i = 0
    while i < d:
        pi += (Decimal(1)/(16**i))*((Decimal(4)/(8*i+1))-(Decimal(2)/(8*i+4))-(Decimal(1)/(8*i+5))-(Decimal(1)/(8*i+6)))
        i += 1
    return pi
d = 100
getcontext().prec = d
my_pi = bailey_borwein_plouffe(d)
print(f"Pi = {my_pi}")

# Естественно, спасибо за помощь гуглу, без него это было бы крайне непросто